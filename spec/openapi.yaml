openapi: 3.0.1
info:
  title: Messages-crud
  description: 'Messages-проект - это проект для работы с сущностью messages'
  license:
    name: MIT open source license
    url: https://github.com/otuskotlin/202105-otuskotlin-marketplace/blob/main/LICENSE
  version: 0.0.1
servers:
  - url: https://localhost/
tags:
  - name: messages-crud
    description: CRUDS для сообщений
  - name: offers
    description: создание, обновление, чтение, удаление и поиск сообщений
paths:
  /customer:
    post:
      tags:
        - customer
      summary: создать customer
      operationId: createCustomer
      requestBody:
        description: Объект запроса для создания customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMessageResponse'
  /messages/create:
    post:
      tags:
        - message
      summary: создать сообщение
      operationId: createMessage
      requestBody:
        description: Объект запроса для создания сообщения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMessageResponse'

  /messages/read:
    post:
      tags:
        - message
      summary: Получить информацию о сообщении
      operationId: readMessage
      requestBody:
        description: Объект запроса для получения информации о сообщении
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadMessageRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadMessageResponse'
  /messages/update:
    post:
      tags:
        - message
      summary: Обновить объявление
      operationId: updateAd
      requestBody:
        description: Объект запроса для обновления объявления
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessageRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMessageResponse'
  /messages/delete:
    post:
      tags:
        - message
      summary: Удалить объявление
      operationId: deleteAd
      requestBody:
        description: Объект запроса для удаления объявления
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMessageRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMessageResponse'
  /messages/search:
    post:
      tags:
        - message
      summary: Поиск объявлений
      operationId: searchAd
      requestBody:
        description: Объект запроса для поиска объявлений
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchMessageRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchMessageResponse'

components:
  schemas:

    BaseMessage:
      type: object
      description: Базовый класс как для запросов, так и для ответов
      properties:
        messageUUID:
          type: string
          format: uuid
        messageType:
          type: string
          title: Дискриминатор
          description: Дискриминатор, содержащий тип класса сообщения и использующийся для десериализации
      discriminator:
        propertyName: messageType

    BaseRequest:
      description: Базовый класс для всех запросов
      properties:
        requestUUID:
          type: string
          format: uuid


    BaseResponse:
      description: Базовый класс для всех ответов
      allOf:
        - type: object
          required:
            - result
          properties:
            requestUUID:
              type: string
              format: uuid
            result:
              type: string
              enum:
                - success
                - error
            errors:
              type: array
              items:
                $ref: '#/components/schemas/RequestError'

    RequestError:
      type: object
      description: Описание ошибки обработки запроса
      properties:
        message:
          type: string
        field:
          type: string

    ResponseMessage:
      description: Структура, описывающая сообщения
      properties:
        payload:
          type: string

    BaseDebugRequest:
      type: object
      description: Структура с описанием отладочных параметров запроса
      properties:
        mode:
          type: string
          default: prod
          enum:
            - prod
            - test
            - stub

    BasePaginatedRequest:
      type: object
      description: Структура с описанием запрашиваемой страницы в запросах списков
      properties:
        size:
          type: integer
          description: Размер запрашиваемой страницы
          format: int32
        lastId:
          type: string
          description: Идентификатор последнего объекта предыдущей страницы

    BasePaginatedResponse:
      type: object
      description: Структура с описанием страницы в ответе
      properties:
        size:
          type: integer
          description: Размер запрашиваемой страницы
          format: int32
        lastId:
          type: string
          description: Идентификатор последнего объекта предыдущей страницы
        position:
          type: string
          enum:
            - first
            - middle
            - last


    CreateMessageRequest:
      description: Структура для создания сообщения в репоизтории
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/MessageMetaInfo'

    CreateCustomerRequest:
      description: Структура для создания customer
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/MessageMetaInfo'


    CreateMessageResponse:
      description: Структура для ответа с начальным состоянием при старте вэб-клиента
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object


    ReadMessageRequest:

      description: Структура для получения объявления
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          required:
            - messageUUID
          properties:
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - databaseError
    ReadMessageResponse:
      description: Структура для ответа на запрос с информацией об объявлении
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            payload:
              type: string

    UpdateMessageRequest:
      description: Структура для запроса обновления существующего объявления
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          required:
            - payload
            - messageUUID
          properties:
            payload:
              type: string
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyTitle
                        - databaseError

    UpdateMessageResponse:
      description: Структура для ответа на запрос с информацией об объявлении
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object





    DeleteMessageRequest:
      description: Структура для запроса удаления объявления
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          required:
            - messageUUID
          properties:
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - databaseError

    DeleteMessageResponse:
      description: Структура для ответа на запрос об удалении объявления
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            payload:
              type: string

    SearchMessageRequest:
      description: Структура для запроса поиска объявлений
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            page:
              $ref: '#/components/schemas/BasePaginatedRequest'
    MessageMetaInfo:
      description: мета-инфомация для сообщения
      type: object
      properties:
        parentUuid:
          description: сообщение родитель
          type: string
          format: uuid
        payload:
          description: текст сообщения
          type: string
        from:
          description: uuid клиента или техподдержки (Кто отправитель ?)
          type: string
          format: uuid
        to:
          description: uuid клиента или техподдержки (Кто получатель ?)
          type: string
          format: uuid
      required:
        - payload
        - from
        - to


    SearchMessageResponse:
      description: Структура для ответа на запрос поиска объявлений
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            page:
              $ref: '#/components/schemas/BasePaginatedResponse'
            foundMessages:
              type: array
              items:
                $ref: '#/components/schemas/ResponseMessage'

